apply plugin: 'com.android.application'

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile files('libs/umeng-update-v2.4.2.jar')
    compile files('libs/umeng-analytics-v5.2.4.jar')
    compile files('libs/umeng-feedback-v4.3.jar')
    compile files('libs/ShareSDK-Core-2.4.2.jar')
    compile 'com.android.support:support-v4:21.0.3'
    compile 'com.koushikdutta.ion:ion:1.+'
    compile 'com.intellij:annotations:12.0'
    compile 'com.google.code.gson:gson:2.3'
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    compile 'com.daimajia.numberprogressbar:library:1.2@aar'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'de.greenrobot:java-common:2.0.0'
    compile 'com.ms-square:expandableTextView:0.1.3'
    compile 'com.android.support:support-v13:21.0.3'
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode = 8
        versionName = "1.2.1"
        applicationId "cn.edu.bupt.niclab"
    }

    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets', 'ovpnlibs/assets']
            jniLibs.srcDirs = ['src/main/jniLibs', 'ovpnlibs/jniLibs']
            jni.srcDirs = [] //disable automatic ndk-build
        }

        ovpn3 {

        }

        debug {

        }

        release {

        }
    }

    /*
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }*/

    signingConfigs {
        release
        config {
            keyAlias 'ppxpp'
            keyPassword 'zhouhao'
            storeFile file('E:/AndroidStudioProjects/APKKeyStore/apkkeystore.jks')
            storePassword 'zhouhao'
        }
    }

    lintOptions {
        enable 'BackButton', 'EasterEgg', 'StopShip', 'IconExpectedSize', 'GradleDynamicVersion', 'NewerVersionAvailable'
        disable 'MissingTranslation'
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.config
        }
    }


    productFlavors {
        //ovpn3

        normal

        /*                   
      x86 {
            versionCode Integer.parseInt("6" + defaultConfig.versionCode)
            ndk {
                abiFilter "x86"
            }
        }

        mips {
            versionCode Integer.parseInt("4" + defaultConfig.versionCode)
            ndk {
                abiFilter "mips"
            }
        }

        armv7 {
            versionCode Integer.parseInt("2" + defaultConfig.versionCode)
            ndk {
               abiFilter "armeabi-v7a"
            }
        }

        arm {
            versionCode Integer.parseInt("1" + defaultConfig.versionCode)
            ndk {
                abiFilter "armeabi"
            }
        }

        fat
        */
    }


}

// ~/.gradle/gradle.properties
if (project.hasProperty('keystoreFile') &&
        project.hasProperty('keystorePassword') &&
        project.hasProperty('keystoreAliasPassword')) {
    android.signingConfigs.release.storeFile = file(keystoreFile)
    android.signingConfigs.release.storePassword = keystorePassword
    android.signingConfigs.release.keyPassword = keystoreAliasPassword
    android.signingConfigs.release.keyAlias = keystoreAlias
} else {
    android.buildTypes.release.signingConfig = null
}

/*tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
    pkgTask.jniFolders = new HashSet<File>()
    pkgTask.jniFolders.add(new File(buildDir, 'native-libs'))
}
*/

